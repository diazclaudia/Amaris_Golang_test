<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8545dc55-bf67-4c37-8477-36f75e793614" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repository/broker_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/repository/broker_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repository/write/dynamodb_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/repository/write/dynamodb_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2Zah48jbglbfvjXk5VqyYY6P1kc" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Claudia/Documents/Golang Projects/Amaris_Golang_test/backend/repository/read&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Claudia\Documents\Golang Projects\Amaris_Golang_test\backend\repository\read" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend\repository" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend\domain\update" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend\domain\read" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Claudia\Documents\Golang Projects\Amaris_Golang_test\backend" />
      <recent name="C:\Users\Claudia\Documents\Golang Projects\Amaris_Golang_test\backend\repository" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend\repository\write" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend\repository\read" />
      <recent name="C:\Users\duvan\OneDrive\Documentos\Golang Projects\Amaris_Golang_test\backend\repository" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test backend">
    <configuration name="go build backend" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backend" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateTableIfNotExists in backend/repository/read (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/repository/read" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backend/repository/read" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateTableIfNotExists\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateTableIfNotExists in backend/repository/read" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/repository/read" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backend/repository/read" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateTableIfNotExists\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSeedItems in backend/repository/read" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/repository/read" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backend/repository/read" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSeedItems\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test backend" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="backend" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test backend" />
        <item itemvalue="Go Build.go build backend" />
        <item itemvalue="Go Test.TestCreateTableIfNotExists in backend/repository/read (1)" />
        <item itemvalue="Go Test.TestCreateTableIfNotExists in backend/repository/read" />
        <item itemvalue="Go Test.TestSeedItems in backend/repository/read" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/backend$go_test_backend.out" NAME="go test backend Coverage Results" MODIFIED="1702874929056" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/backend$dynamodb_test_go__1_.out" NAME="dynamodb_test.go (1) Coverage Results" MODIFIED="1702769398497" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/backend$dynamodb_test_go.out" NAME="dynamodb_test.go Coverage Results" MODIFIED="1702732706187" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>